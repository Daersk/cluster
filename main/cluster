import string


def dict_search(word):
    if word in data_dict:
        data_dict[word] += 1
    else:
        data_dict.update({word: 1})


# concord is an open source qualitative analysis program that can be used to rapidly analyze huge amounts of text

# First we collect the text to be examined
source_text = input("Please input text: ")
target_word = input("Please select word: ")
analysis_range = int(input("Please input range: "))

for char in string.punctuation:
    source_text = source_text.replace(char, "")
# next we clean up the text
split_text = source_text.split()
word_count = len(split_text)
data_dict = {}

# Then we look at the target word and the range

for i in range(0, word_count):
    # left edge case
    if split_text[i] == target_word and i < analysis_range:
        for j in range(1, analysis_range + 1):
            dict_search(split_text[i + j])
        for j in range(1, i + 1):
            dict_search(split_text[i - j])

    # right edge case
    elif split_text[i] == target_word and word_count - i <= analysis_range:
        for j in range(1, analysis_range + 1):
            dict_search(split_text[i - j])
        for j in range(1, word_count - i):
            dict_search(split_text[i + j])

    # general case
    elif split_text[i] == target_word:
        for j in range(1, analysis_range + 1):
            dict_search(split_text[i + j])
            dict_search(split_text[i - j])

print(data_dict)
